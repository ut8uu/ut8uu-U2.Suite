// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

using U2.Logger.Backend.Data;

#nullable disable

namespace U2.Logger.Backend.Migrations;

[DbContext(typeof(LoggerContext))]
partial class LoggerContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder.HasAnnotation("ProductVersion", "8.0.20");

        modelBuilder.Entity("U2.Logger.Backend.Models.QSO", b =>
        {
            b.Property<int>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("INTEGER");

            b.Property<string>("DateTime")
                .HasColumnName("date_time")
                .HasColumnType("INTEGER");

            b.Property<string>("DateTimeOff")
                .HasColumnName("date_time_off")
                .HasColumnType("INTEGER");

            b.Property<string>("Band")
                .HasColumnName("band")
                .HasColumnType("TEXT");

            b.Property<string>("BandRx")
                .HasColumnName("band_rx")
                .HasColumnType("TEXT");

            b.Property<string>("Callsign")
                .HasColumnName("call")
                .HasColumnType("TEXT");

            b.Property<string>("Comment")
                .HasColumnName("comment")
                .HasColumnType("TEXT");

            b.Property<string>("Continent")
                .HasColumnName("cont")
                .HasColumnType("TEXT");

            b.Property<string>("Country")
                .HasColumnName("country")
                .HasColumnType("TEXT");

            b.Property<string>("CqZone")
                .HasColumnName("cqz")
                .HasColumnType("TEXT");

            b.Property<int?>("Distance")
                .HasColumnName("distance")
                .HasColumnType("INTEGER");

            b.Property<string>("Dxcc")
                .HasColumnName("dxcc")
                .HasColumnType("TEXT");

            b.Property<string>("Email")
                .HasColumnName("email")
                .HasColumnType("TEXT");

            b.Property<double?>("Freq")
                .HasColumnName("freq")
                .HasColumnType("REAL");

            b.Property<double?>("FreqRx")
                .HasColumnName("freq_rx")
                .HasColumnType("REAL");

            b.Property<string>("Gridsquare")
                .HasColumnName("gridsquare")
                .HasColumnType("TEXT");

            b.Property<string>("ItuZone")
                .HasColumnName("ituz")
                .HasColumnType("TEXT");

            b.Property<string>("Lat")
                .HasColumnName("lat")
                .HasColumnType("TEXT");

            b.Property<string>("Lon")
                .HasColumnName("lon")
                .HasColumnType("TEXT");

            b.Property<string>("Mode")
                .HasColumnName("mode")
                .HasColumnType("TEXT");

            b.Property<string>("MyCity")
                .HasColumnName("my_city")
                .HasColumnType("TEXT");

            b.Property<string>("MyCountry")
                .HasColumnName("my_country")
                .HasColumnType("TEXT");

            b.Property<string>("MyCqZone")
                .HasColumnName("my_cq_zone")
                .HasColumnType("TEXT");

            b.Property<string>("MyGridsquare")
                .HasColumnName("my_gridsquare")
                .HasColumnType("TEXT");

            b.Property<string>("MyItuZone")
                .HasColumnName("my_itu_zone")
                .HasColumnType("TEXT");

            b.Property<string>("MyLat")
                .HasColumnName("my_lat")
                .HasColumnType("TEXT");

            b.Property<string>("MyLon")
                .HasColumnName("my_lon")
                .HasColumnType("TEXT");

            b.Property<string>("MyName")
                .HasColumnName("my_name")
                .HasColumnType("TEXT");

            b.Property<string>("Name")
                .HasColumnName("name")
                .HasColumnType("TEXT");

            b.Property<string>("Operator")
                .HasColumnName("operator")
                .HasColumnType("TEXT");

            b.Property<string>("QslRcvd")
                .HasColumnName("qsl_rcvd")
                .HasColumnType("TEXT");

            b.Property<string>("QslSent")
                .HasColumnName("qsl_sent")
                .HasColumnType("TEXT");

            b.Property<string>("QslVia")
                .HasColumnName("qsl_via")
                .HasColumnType("TEXT");

            b.Property<string>("Qth")
                .HasColumnName("qth")
                .HasColumnType("TEXT");

            b.Property<string>("RstRcvd")
                .HasColumnName("rst_rcvd")
                .HasColumnType("TEXT");

            b.Property<string>("RstSent")
                .HasColumnName("rst_sent")
                .HasColumnType("TEXT");

            b.Property<string>("StationCallsign")
                .HasColumnName("station_callsign")
                .HasColumnType("TEXT");

            b.HasKey("Id");

            b.ToTable("QSOs");
        });
#pragma warning restore 612, 618
    }
}
